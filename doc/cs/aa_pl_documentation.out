\BOOKMARK [1][-]{section*.2}{Abstract}{}% 1
\BOOKMARK [1][-]{section*.4}{Using the Virtual Machine}{}% 2
\BOOKMARK [1][-]{section*.7}{Parsing}{}% 3
\BOOKMARK [2][-]{section*.9}{Lexical Analysis}{section*.7}% 4
\BOOKMARK [2][-]{section*.12}{Parse tree \(PT\)}{section*.7}% 5
\BOOKMARK [3][-]{section*.14}{First Pass}{section*.12}% 6
\BOOKMARK [3][-]{section*.16}{Second Pass}{section*.12}% 7
\BOOKMARK [3][-]{section*.19}{Third Pass}{section*.12}% 8
\BOOKMARK [2][-]{section*.21}{Abstract Syntax Tree \(AST\)}{section*.7}% 9
\BOOKMARK [3][-]{section*.23}{Expanding the AST}{section*.21}% 10
\BOOKMARK [3][-]{section*.25}{Simplifying the AST}{section*.21}% 11
\BOOKMARK [1][-]{section*.27}{Static Analysis}{}% 12
\BOOKMARK [2][-]{section*.29}{Type declarations}{section*.27}% 13
\BOOKMARK [2][-]{section*.31}{Function Matching}{section*.27}% 14
\BOOKMARK [2][-]{section*.33}{Building Inheritance Trees}{section*.27}% 15
\BOOKMARK [2][-]{section*.35}{Control path verification}{section*.27}% 16
\BOOKMARK [1][-]{section*.37}{Type System}{}% 17
\BOOKMARK [2][-]{section*.39}{Static Type Environment}{section*.37}% 18
\BOOKMARK [2][-]{section*.41}{Dynamic Type Environment}{section*.37}% 19
\BOOKMARK [2][-]{section*.43}{Typechecking}{section*.37}% 20
\BOOKMARK [1][-]{section*.45}{Evaluation of Code}{}% 21
\BOOKMARK [2][-]{section*.47}{Environment Operators}{section*.45}% 22
\BOOKMARK [2][-]{section*.50}{Literals}{section*.45}% 23
\BOOKMARK [2][-]{section*.53}{Arithmetic Operators}{section*.45}% 24
\BOOKMARK [2][-]{section*.56}{Logic Operations}{section*.45}% 25
\BOOKMARK [2][-]{section*.58}{Functional Operations}{section*.45}% 26
\BOOKMARK [2][-]{section*.60}{Declarative Operations}{section*.45}% 27
\BOOKMARK [2][-]{section*.62}{Flow Control Operations}{section*.45}% 28
\BOOKMARK [1][-]{section*.64}{Internals of the Virtual Machine}{}% 29
\BOOKMARK [2][-]{section*.66}{Executing bytecode}{section*.64}% 30
\BOOKMARK [2][-]{section*.68}{The operand and call stacks}{section*.64}% 31
\BOOKMARK [2][-]{section*.70}{The Ref Value Environment}{section*.64}% 32
\BOOKMARK [2][-]{section*.72}{The Garbage Collector}{section*.64}% 33
\BOOKMARK [1][-]{section*.74}{Compiler}{}% 34
\BOOKMARK [2][-]{section*.76}{Compiling the AST}{section*.74}% 35
\BOOKMARK [3][-]{section*.78}{AST to Bytecode Flowchart}{section*.76}% 36
\BOOKMARK [2][-]{section*.81}{Verifying \305 Bytecode}{section*.74}% 37
\BOOKMARK [1][-]{section*.83}{Structure of an \305-binary file}{}% 38
\BOOKMARK [1][-]{section*.85}{Appendix}{}% 39
\BOOKMARK [2][-]{section*.87}{Appendix 1: Complete Overview of Grammar}{section*.85}% 40
\BOOKMARK [2][-]{section*.89}{Appendix 2: Complete Overview of Operational Semantics}{section*.85}% 41
\BOOKMARK [2][-]{section*.93}{Appendix 3: Complete Overview of Typing Rules}{section*.85}% 42
\BOOKMARK [2][-]{section*.97}{Appendix 4: Complete Overview of Compile Errors}{section*.85}% 43
\BOOKMARK [2][-]{section*.99}{Appendix 5: Complete Overview of Instruction List}{section*.85}% 44
\BOOKMARK [2][-]{section*.101}{Appendix 6: Complete operator list}{section*.85}% 45
\BOOKMARK [2][-]{section*.103}{Appendix 7: Complete keyword list}{section*.85}% 46
